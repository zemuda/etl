version: '3.8'

services:
  excel-parquet-pipeline:
    build: .
    container_name: excel-parquet-pipeline
    restart: unless-stopped
    environment:
      - INPUT_DIR=/etl/data/input
      - OUTPUT_DIR=/etl/data/output
      - LOG_LEVEL=INFO
    volumes:
      - C:/etl/data/input:/etl/data/input  # Mount entire input structure
      - C:/etl/data/output:/etl/data/output
      - ./logs:/etl/logs
      - ./state:/etl/state
    command: >
      --input-dir /etl/data/input
      --output-dir /etl/data/output
      --clean-orphaned
      --log-level INFO
  # Optional: Add a file watcher service for real-time processing
  # file-watcher:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile.watcher
  #   container_name: excel-file-watcher
  #   restart: unless-stopped
  #   environment:
  #     - WATCH_DIR=/etl/data/input
  #     - PIPELINE_CONTAINER=excel-parquet-pipeline
  #   volumes:
  #     - ./data/input:/etl/data/input
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - excel-parquet-pipeline
  #   profiles:
  #     - watcher

  # Optional: Monitoring service
#   pipeline-monitor:
#     image: prom/prometheus:latest
#     container_name: pipeline-monitor
#     restart: unless-stopped
#     ports:
#       - "9090:9090"
#     volumes:
#       - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
#       - prometheus_data:/prometheus
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yml'
#       - '--storage.tsdb.path=/prometheus'
#       - '--web.console.libraries=/etc/prometheus/console_libraries'
#       - '--web.console.templates=/etc/prometheus/consoles'
#     profiles:
#       - monitoring

# volumes:
#   prometheus_data:
